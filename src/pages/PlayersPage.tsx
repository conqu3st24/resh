import React, { useEffect, useState } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { RootState } from '../store';
import { fetchPlayers, setFilter, resetFilter } from '../store/slices/playerSlice';
import PlayerCard from '../components/PlayerCard';
import { MagnifyingGlassIcon } from '@heroicons/react/24/outline';
import { Player } from '../types/player';

const PlayersPage: React.FC = () => {
  console.log('PlayersPage –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');
  
  const dispatch = useDispatch();
  const { players, loading, error, filter } = useSelector((state: RootState) => state.players);
  
  console.log('PlayersPage –¥–∞–Ω–Ω—ã–µ –∏–∑ Redux:', { players, loading, error, filter });
  
  const [selectedGame, setSelectedGame] = useState<string>('');
  const [selectedNationality, setSelectedNationality] = useState<string>('');
  const [searchTerm, setSearchTerm] = useState<string>('');

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log('PlayersPage useEffect - –∑–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä–æ–∫–æ–≤');
    dispatch(fetchPlayers() as any);
  }, [dispatch]);

  // –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
  useEffect(() => {
    dispatch(setFilter({
      game: selectedGame,
      nationality: selectedNationality,
      searchTerm
    }));
  }, [dispatch, selectedGame, selectedNationality, searchTerm]);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–æ–≤
  const getFilteredPlayers = () => {
    return players.filter((player: Player) => {
      // –§–∏–ª—å—Ç—Ä –ø–æ –∏–≥—Ä–µ
      if (filter.game && !player.games.includes(filter.game)) {
        return false;
      }
      
      // –§–∏–ª—å—Ç—Ä –ø–æ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
      if (filter.nationality && player.nationality !== filter.nationality) {
        return false;
      }
      
      // –§–∏–ª—å—Ç—Ä –ø–æ –ø–æ–∏—Å–∫–æ–≤–æ–º—É –∑–∞–ø—Ä–æ—Å—É
      if (filter.searchTerm) {
        const searchLower = filter.searchTerm.toLowerCase();
        return (
          player.nickname.toLowerCase().includes(searchLower) ||
          player.fullName.toLowerCase().includes(searchLower)
        );
      }
      
      return true;
    });
  };

  // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∏–≥—Ä—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
  const getUniqueGames = () => {
    const games = new Set<string>();
    players.forEach((player: Player) => {
      player.games.forEach((game: string) => games.add(game));
    });
    return Array.from(games).sort();
  };

  // –ü–æ–ª—É—á–∞–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞
  const getUniqueNationalities = () => {
    const nationalities = new Set<string>();
    players.forEach((player: Player) => {
      nationalities.add(player.nationality);
    });
    return Array.from(nationalities).sort();
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–±—Ä–æ—Å–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  const handleResetFilters = () => {
    setSelectedGame('');
    setSelectedNationality('');
    setSearchTerm('');
    dispatch(resetFilter());
  };

  // –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–≥—Ä–æ–∫–∏
  const filteredPlayers = getFilteredPlayers();

  return (
    <main className="py-8 md:py-12">
      <div className="container mx-auto px-4">
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-secondary mb-4">Players</h1>
          
          {/* –§–∏–ª—å—Ç—Ä—ã */}
          <div className="flex flex-col md:flex-row gap-4 mb-6">
            {/* –§–∏–ª—å—Ç—Ä –ø–æ –∏–≥—Ä–µ */}
            <div className="w-full md:w-auto">
              <select
                value={selectedGame}
                onChange={(e) => setSelectedGame(e.target.value)}
                className="w-full md:w-64 px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary"
              >
                <option value="">Game</option>
                {getUniqueGames().map(game => (
                  <option key={game} value={game}>{game}</option>
                ))}
              </select>
            </div>
            
            {/* –§–∏–ª—å—Ç—Ä –ø–æ –Ω–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ */}
            <div className="w-full md:w-auto">
              <select
                value={selectedNationality}
                onChange={(e) => setSelectedNationality(e.target.value)}
                className="w-full md:w-64 px-4 py-2 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary"
              >
                <option value="">Nationality</option>
                {getUniqueNationalities().map(nationality => (
                  <option key={nationality} value={nationality}>{nationality}</option>
                ))}
              </select>
            </div>
            
            {/* –ü–æ–∏—Å–∫ */}
            <div className="w-full md:flex-1 relative">
              <input
                type="text"
                value={searchTerm}
                onChange={(e) => setSearchTerm(e.target.value)}
                placeholder="Search players"
                className="w-full px-4 py-2 pr-10 rounded-lg border border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary"
              />
              <MagnifyingGlassIcon className="absolute right-3 top-1/2 transform -translate-y-1/2 h-5 w-5 text-gray-400" />
            </div>
            
            {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ */}
            {(selectedGame || selectedNationality || searchTerm) && (
              <button
                onClick={handleResetFilters}
                className="text-primary hover:text-lightBlue font-medium"
              >
                –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
              </button>
            )}
          </div>
        </div>
        
        {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ */}
        {loading && (
          <div className="flex justify-center items-center py-12">
            <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary"></div>
          </div>
        )}
        
        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ */}
        {error && (
          <div className="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded mb-6">
            <p>{error}</p>
          </div>
        )}
        
        {/* –°–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ */}
        {!loading && filteredPlayers.length > 0 ? (
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6">
            {filteredPlayers.map((player: Player) => (
              <PlayerCard key={player.id} player={player} />
            ))}
          </div>
        ) : !loading && !error ? (
          <div className="bg-white p-8 rounded-lg shadow-sm text-center">
            <div className="text-5xl mb-4">üéÆ</div>
            <h2 className="text-2xl font-bold text-secondary mb-4">–ò–≥—Ä–æ–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h2>
            <p className="text-textGray mb-6">–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏</p>
            <button
              onClick={handleResetFilters}
              className="bg-primary hover:bg-lightBlue text-white font-medium px-6 py-3 rounded-lg transition-colors"
            >
              –°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã
            </button>
          </div>
        ) : null}
      </div>
    </main>
  );
};

export default PlayersPage; 