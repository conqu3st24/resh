import React, { useState } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { useSelector, useDispatch } from 'react-redux';
import { RootState } from '../store';
import { clearCart } from '../store/slices/cartSlice';
import { toast } from 'react-hot-toast';
import { CartItem } from '../types/product';

// –ò–∫–æ–Ω–∫–∏
import {
  CreditCardIcon,
  TruckIcon,
  MapPinIcon,
  ArrowRightIcon,
  ArrowLeftIcon
} from '@heroicons/react/24/outline';

const CheckoutPage: React.FC = () => {
  const navigate = useNavigate();
  const dispatch = useDispatch();
  const { items, totalItems, totalPrice } = useSelector((state: RootState) => state.cart);
  const [step, setStep] = useState(1);
  
  // –î–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
  const [formData, setFormData] = useState({
    firstName: '',
    lastName: '',
    email: '',
    phone: '',
    address: '',
    city: '',
    postalCode: '',
    deliveryMethod: 'cdek',
    paymentMethod: 'card',
  });

  // –ï—Å–ª–∏ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞, –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–æ—Ä–∑–∏–Ω—ã
  if (items.length === 0) {
    return (
      <main className="py-8 md:py-12 bg-[#E3E7F0]">
        <div className="container mx-auto px-4">
          <div className="bg-white p-8 rounded-lg shadow-sm text-center">
            <div className="text-5xl mb-4">üõí</div>
            <h2 className="text-2xl font-bold text-secondary mb-4">–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞</h2>
            <p className="text-gray-600 mb-6">–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</p>
            <Link
              to="/catalog/all"
              className="bg-primary hover:bg-lightBlue text-white font-medium px-6 py-3 rounded-lg transition-colors inline-block"
            >
              –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–∞—Ç–∞–ª–æ–≥—É
            </Link>
          </div>
        </div>
      </main>
    );
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–µ–π —Ñ–æ—Ä–º—ã
  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    
    if (step < 3) {
      setStep(step + 1);
    } else {
      // –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–æ
      toast.success('–ó–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!');
      dispatch(clearCart());
      navigate('/checkout/success');
    }
  };

  // –ü–µ—Ä–µ—Ö–æ–¥ –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–º—É —à–∞–≥—É
  const goBack = () => {
    if (step > 1) {
      setStep(step - 1);
    } else {
      navigate('/cart');
    }
  };

  // –°—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏
  const deliveryCost = formData.deliveryMethod === 'cdek' ? 300 : 0;

  // –ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞
  const total = totalPrice + deliveryCost;

  return (
    <main className="py-8 md:py-12 bg-[#E3E7F0]">
      <div className="container mx-auto px-4">
        {/* –•–ª–µ–±–Ω—ã–µ –∫—Ä–æ—à–∫–∏ */}
        <div className="flex items-center text-sm mb-6">
          <Link to="/" className="text-gray-500 hover:text-primary">
            –ì–ª–∞–≤–Ω–∞—è
          </Link>
          <span className="mx-2 text-gray-400">/</span>
          <Link to="/cart" className="text-gray-500 hover:text-primary">
            –ö–æ—Ä–∑–∏–Ω–∞
          </Link>
          <span className="mx-2 text-gray-400">/</span>
          <span className="text-gray-700">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</span>
        </div>

        <h1 className="text-2xl font-bold mb-6">–û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞</h1>

        {/* –®–∞–≥–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ */}
        <div className="flex justify-between mb-8 relative">
          <div className="absolute top-1/2 left-0 right-0 h-1 bg-gray-200 -z-10 transform -translate-y-1/2"></div>

          <div className={`flex flex-col items-center ${step >= 1 ? "text-primary" : "text-gray-400"}`}>
            <div
              className={`w-10 h-10 rounded-full flex items-center justify-center mb-2 ${
                step >= 1 ? "bg-primary text-white" : "bg-gray-200"
              }`}
            >
              <span>1</span>
            </div>
            <span className="text-sm">–î–∞–Ω–Ω—ã–µ</span>
          </div>

          <div className={`flex flex-col items-center ${step >= 2 ? "text-primary" : "text-gray-400"}`}>
            <div
              className={`w-10 h-10 rounded-full flex items-center justify-center mb-2 ${
                step >= 2 ? "bg-primary text-white" : "bg-gray-200"
              }`}
            >
              <span>2</span>
            </div>
            <span className="text-sm">–î–æ—Å—Ç–∞–≤–∫–∞</span>
          </div>

          <div className={`flex flex-col items-center ${step >= 3 ? "text-primary" : "text-gray-400"}`}>
            <div
              className={`w-10 h-10 rounded-full flex items-center justify-center mb-2 ${
                step >= 3 ? "bg-primary text-white" : "bg-gray-200"
              }`}
            >
              <span>3</span>
            </div>
            <span className="text-sm">–û–ø–ª–∞—Ç–∞</span>
          </div>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-6">
          {/* –§–æ—Ä–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ */}
          <div className="lg:col-span-2">
            <div className="bg-white rounded-lg shadow-sm overflow-hidden">
              <form onSubmit={handleSubmit}>
                {/* –®–∞–≥ 1: –õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ */}
                {step === 1 && (
                  <div className="p-6">
                    <h2 className="text-xl font-semibold mb-4">–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ</h2>

                    <div className="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">
                          –ò–º—è *
                        </label>
                        <input
                          type="text"
                          name="firstName"
                          value={formData.firstName}
                          onChange={handleChange}
                          required
                          className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">
                          –§–∞–º–∏–ª–∏—è *
                        </label>
                        <input
                          type="text"
                          name="lastName"
                          value={formData.lastName}
                          onChange={handleChange}
                          required
                          className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">
                          Email *
                        </label>
                        <input
                          type="email"
                          name="email"
                          value={formData.email}
                          onChange={handleChange}
                          required
                          className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary"
                        />
                      </div>

                      <div>
                        <label className="block text-sm font-medium text-gray-700 mb-1">
                          –¢–µ–ª–µ—Ñ–æ–Ω *
                        </label>
                        <input
                          type="tel"
                          name="phone"
                          value={formData.phone}
                          onChange={handleChange}
                          required
                          className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary"
                        />
                      </div>
                    </div>

                    <div className="flex justify-end">
                      <button
                        type="submit"
                        className="bg-primary hover:bg-lightBlue text-white px-6 py-2 rounded-md font-medium"
                      >
                        –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                      </button>
                    </div>
                  </div>
                )}

                {/* –®–∞–≥ 2: –î–æ—Å—Ç–∞–≤–∫–∞ */}
                {step === 2 && (
                  <div className="p-6">
                    <h2 className="text-xl font-semibold mb-4">–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏</h2>

                    <div className="space-y-4 mb-6">
                      <div
                        className={`border rounded-lg p-4 cursor-pointer ${
                          formData.deliveryMethod === "cdek"
                            ? "border-primary bg-primary/5"
                            : ""
                        }`}
                      >
                        <label className="flex items-start cursor-pointer">
                          <input
                            type="radio"
                            name="deliveryMethod"
                            value="cdek"
                            checked={formData.deliveryMethod === "cdek"}
                            onChange={handleChange}
                            className="mt-1"
                          />
                          <div className="ml-3">
                            <div className="flex items-center">
                              <TruckIcon className="w-5 h-5 mr-2" />
                              <span className="font-medium">–°–î–≠–ö</span>
                            </div>
                            <p className="text-sm text-gray-500 mt-1">
                              –î–æ—Å—Ç–∞–≤–∫–∞ –∫—É—Ä—å–µ—Ä–æ–º –°–î–≠–ö –¥–æ –¥–≤–µ—Ä–∏
                            </p>
                            <p className="text-sm font-medium mt-1">300 ‚ÇΩ</p>
                          </div>
                        </label>
                      </div>

                      <div
                        className={`border rounded-lg p-4 cursor-pointer ${
                          formData.deliveryMethod === "pickup"
                            ? "border-primary bg-primary/5"
                            : ""
                        }`}
                      >
                        <label className="flex items-start cursor-pointer">
                          <input
                            type="radio"
                            name="deliveryMethod"
                            value="pickup"
                            checked={formData.deliveryMethod === "pickup"}
                            onChange={handleChange}
                            className="mt-1"
                          />
                          <div className="ml-3">
                            <div className="flex items-center">
                              <MapPinIcon className="w-5 h-5 mr-2" />
                              <span className="font-medium">–°–∞–º–æ–≤—ã–≤–æ–∑</span>
                            </div>
                            <p className="text-sm text-gray-500 mt-1">
                              –°–∞–º–æ–≤—ã–≤–æ–∑ –∏–∑ –ø—É–Ω–∫—Ç–∞ –≤—ã–¥–∞—á–∏
                            </p>
                            <p className="text-sm font-medium mt-1">–ë–µ—Å–ø–ª–∞—Ç–Ω–æ</p>
                          </div>
                        </label>
                      </div>
                    </div>

                    {formData.deliveryMethod === "cdek" && (
                      <div className="mb-6">
                        <h3 className="font-medium mb-3">–ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏</h3>

                        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                          <div className="md:col-span-2">
                            <label className="block text-sm font-medium text-gray-700 mb-1">
                              –ê–¥—Ä–µ—Å *
                            </label>
                            <input
                              type="text"
                              name="address"
                              value={formData.address}
                              onChange={handleChange}
                              required
                              className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary"
                            />
                          </div>

                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-1">
                              –ì–æ—Ä–æ–¥ *
                            </label>
                            <input
                              type="text"
                              name="city"
                              value={formData.city}
                              onChange={handleChange}
                              required
                              className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary"
                            />
                          </div>

                          <div>
                            <label className="block text-sm font-medium text-gray-700 mb-1">
                              –ò–Ω–¥–µ–∫—Å *
                            </label>
                            <input
                              type="text"
                              name="postalCode"
                              value={formData.postalCode}
                              onChange={handleChange}
                              required
                              className="w-full border border-gray-300 rounded-md px-3 py-2 focus:outline-none focus:ring-2 focus:ring-primary"
                            />
                          </div>
                        </div>
                      </div>
                    )}

                    <div className="flex justify-between">
                      <button
                        type="button"
                        onClick={goBack}
                        className="border border-gray-300 px-6 py-2 rounded-md font-medium"
                      >
                        –ù–∞–∑–∞–¥
                      </button>

                      <button
                        type="submit"
                        className="bg-primary hover:bg-lightBlue text-white px-6 py-2 rounded-md font-medium"
                      >
                        –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å
                      </button>
                    </div>
                  </div>
                )}

                {/* –®–∞–≥ 3: –û–ø–ª–∞—Ç–∞ */}
                {step === 3 && (
                  <div className="p-6">
                    <h2 className="text-xl font-semibold mb-4">–°–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã</h2>

                    <div className="space-y-4 mb-6">
                      <div
                        className={`border rounded-lg p-4 cursor-pointer ${
                          formData.paymentMethod === "card"
                            ? "border-primary bg-primary/5"
                            : ""
                        }`}
                      >
                        <label className="flex items-start cursor-pointer">
                          <input
                            type="radio"
                            name="paymentMethod"
                            value="card"
                            checked={formData.paymentMethod === "card"}
                            onChange={handleChange}
                            className="mt-1"
                          />
                          <div className="ml-3">
                            <div className="flex items-center">
                              <CreditCardIcon className="w-5 h-5 mr-2" />
                              <span className="font-medium">–ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞</span>
                            </div>
                            <p className="text-sm text-gray-500 mt-1">
                              Visa, MasterCard, –ú–ò–†
                            </p>
                          </div>
                        </label>
                      </div>

                      <div
                        className={`border rounded-lg p-4 cursor-pointer ${
                          formData.paymentMethod === "cash"
                            ? "border-primary bg-primary/5"
                            : ""
                        }`}
                      >
                        <label className="flex items-start cursor-pointer">
                          <input
                            type="radio"
                            name="paymentMethod"
                            value="cash"
                            checked={formData.paymentMethod === "cash"}
                            onChange={handleChange}
                            className="mt-1"
                          />
                          <div className="ml-3">
                            <div className="flex items-center">
                              <span className="font-medium">–ù–∞–ª–∏—á–Ω—ã–º–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏</span>
                            </div>
                            <p className="text-sm text-gray-500 mt-1">
                              –û–ø–ª–∞—Ç–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞
                            </p>
                          </div>
                        </label>
                      </div>
                    </div>

                    <div className="flex justify-between">
                      <button
                        type="button"
                        onClick={goBack}
                        className="border border-gray-300 px-6 py-2 rounded-md font-medium"
                      >
                        –ù–∞–∑–∞–¥
                      </button>

                      <button
                        type="submit"
                        className="bg-primary hover:bg-lightBlue text-white px-6 py-2 rounded-md font-medium"
                      >
                        –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                      </button>
                    </div>
                  </div>
                )}
              </form>
            </div>
          </div>

          {/* –°–≤–æ–¥–∫–∞ –∑–∞–∫–∞–∑–∞ */}
          <div>
            <div className="bg-white rounded-lg shadow-sm p-4">
              <h2 className="font-semibold mb-4">–í–∞—à –∑–∞–∫–∞–∑</h2>

              <div className="space-y-3 mb-4">
                {items.map((item: CartItem, index: number) => (
                  <div key={`${item.product.id}-${index}`} className="flex items-center">
                    <div className="w-12 h-12 bg-gray-100 rounded-md flex-shrink-0 relative">
                      <img
                        src={item.product.image}
                        alt={item.product.title}
                        className="object-contain w-full h-full p-1"
                      />
                    </div>

                    <div className="ml-3 flex-1 min-w-0">
                      <p className="font-medium text-sm truncate">{item.product.title}</p>
                      <p className="text-xs text-gray-500">
                        {item.quantity} √ó {item.product.price.toLocaleString()} ‚ÇΩ
                      </p>
                    </div>

                    <div className="font-medium text-sm">
                      {(item.product.price * item.quantity).toLocaleString()} ‚ÇΩ
                    </div>
                  </div>
                ))}
              </div>

              <div className="border-t pt-4 space-y-2">
                <div className="flex justify-between">
                  <span className="text-gray-600">–°—É–º–º–∞ —Ç–æ–≤–∞—Ä–æ–≤</span>
                  <span>{totalPrice.toLocaleString()} ‚ÇΩ</span>
                </div>

                <div className="flex justify-between">
                  <span className="text-gray-600">–î–æ—Å—Ç–∞–≤–∫–∞</span>
                  <span>
                    {deliveryCost > 0
                      ? `${deliveryCost.toLocaleString()} ‚ÇΩ`
                      : "–ë–µ—Å–ø–ª–∞—Ç–Ω–æ"}
                  </span>
                </div>

                <div className="pt-2 border-t flex justify-between font-bold">
                  <span>–ò—Ç–æ–≥–æ</span>
                  <span>{total.toLocaleString()} ‚ÇΩ</span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  );
};

export default CheckoutPage; 